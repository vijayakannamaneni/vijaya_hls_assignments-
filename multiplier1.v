// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="multiplier,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.650000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=40,HLS_VERSION=2019_2}" *)

module multiplier (
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_V,
        b_V,
        c_V,
        c_V_ap_vld
);


input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] a_V;
input  [7:0] b_V;
output  [15:0] c_V;
output   c_V_ap_vld;

reg c_V_ap_vld;

wire   [7:0] ret_V_fu_43_p0;
wire   [7:0] ret_V_fu_43_p1;
wire   [15:0] ret_V_fu_43_p00;
wire   [15:0] ret_V_fu_43_p10;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        c_V_ap_vld = 1'b1;
    end else begin
        c_V_ap_vld = 1'b0;
    end
end

assign ap_done = ap_start;

assign ap_idle = 1'b1;

assign ap_ready = ap_start;

assign c_V = (ret_V_fu_43_p0 * ret_V_fu_43_p1);

assign ret_V_fu_43_p0 = ret_V_fu_43_p00;

assign ret_V_fu_43_p00 = b_V;

assign ret_V_fu_43_p1 = ret_V_fu_43_p10;

assign ret_V_fu_43_p10 = a_V;

endmodule //multiplier

